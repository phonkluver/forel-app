version: '3.8'

services:
  # API Server
  api-server:
    build:
      context: ../api-server
      dockerfile: Dockerfile.dev
    container_name: forel-api-server-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_PATH=./data/forel.db
      - ADMIN_CODE=0202
      - JWT_SECRET=dev-jwt-secret
      - UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=5242880
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080,http://localhost:8081
      - TELEGRAM_BOT_TOKEN=8489499457:AAEYJsk8jN3qynY2J4DoPSlqU1ghMdwlbSQ
      - TELEGRAM_ADMIN_CHAT_ID=your-admin-chat-id
    volumes:
      - ../api-server:/app
      - ../api-server/data:/app/data
      - ../api-server/uploads:/app/uploads
      - /app/node_modules
    restart: unless-stopped
    networks:
      - forel-dev-network
    command: npm run dev

  # Telegram Bot
  telegram-bot:
    build:
      context: ../telegram-bot
      dockerfile: Dockerfile.dev
    container_name: forel-telegram-bot-dev
    environment:
      - BOT_TOKEN=8489499457:AAEYJsk8jN3qynY2J4DoPSlqU1ghMdwlbSQ
      - WEBAPP_URL=http://localhost:8081
      - API_URL=http://localhost:3001
    volumes:
      - ../telegram-bot:/app
      - /app/node_modules
    depends_on:
      - api-server
    restart: unless-stopped
    networks:
      - forel-dev-network
    command: npm run dev

  # Web Application (Development)
  web-app:
    build:
      context: ../my-project-web
      dockerfile: Dockerfile.dev
    container_name: forel-web-app-dev
    ports:
      - "3000:3000"
    volumes:
      - ../my-project-web:/app
      - /app/node_modules
    depends_on:
      - api-server
    restart: unless-stopped
    networks:
      - forel-dev-network
    command: npm run dev

  # Telegram WebApp (Development)
  telegram-webapp:
    build:
      context: ../my-project
      dockerfile: Dockerfile.dev
    container_name: forel-telegram-webapp-dev
    ports:
      - "8081:5173"
    volumes:
      - ../my-project:/app
      - /app/node_modules
    depends_on:
      - api-server
    restart: unless-stopped
    networks:
      - forel-dev-network
    command: npm run dev

networks:
  forel-dev-network:
    driver: bridge
