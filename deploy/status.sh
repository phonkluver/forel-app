#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ "–§–æ—Ä–µ–ª—å"

echo "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ '–§–æ—Ä–µ–ª—å'"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
check_status() {
    local service_name=$1
    local pid_file=$2
    local port=$3
    local url=$4
    
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ $service_name:"
    
    if [ -f "$pid_file" ]; then
        local pid=$(cat "$pid_file")
        if ps -p $pid > /dev/null 2>&1; then
            echo "   ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
            if [ ! -z "$port" ]; then
                if netstat -tuln 2>/dev/null | grep ":$port " > /dev/null; then
                    echo "   ‚úÖ –ü–æ—Ä—Ç $port –∞–∫—Ç–∏–≤–µ–Ω"
                else
                    echo "   ‚ö†Ô∏è  –ü–æ—Ä—Ç $port –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
                fi
            fi
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
            if [ ! -z "$url" ]; then
                if curl -s "$url" > /dev/null 2>&1; then
                    echo "   ‚úÖ URL –¥–æ—Å—Ç—É–ø–µ–Ω: $url"
                else
                    echo "   ‚ö†Ô∏è  URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $url"
                fi
            fi
            
        else
            echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω (PID —Ñ–∞–π–ª —É—Å—Ç–∞—Ä–µ–ª)"
            rm -f "$pid_file"
        fi
    else
        echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω (PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)"
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
check_status "API —Å–µ—Ä–≤–µ—Ä" "logs/api.pid" "3001" "http://localhost:3001/health"
check_status "Telegram –±–æ—Ç" "logs/bot.pid"
check_status "–í–µ–±-—Å–µ—Ä–≤–µ—Ä" "logs/web.pid" "8080" "http://localhost:8080"
check_status "Telegram WebApp" "logs/telegram-web.pid" "8081" "http://localhost:8081"

echo ""
echo "üìÅ –õ–æ–≥–∏:"
if [ -d "logs" ]; then
    for log_file in logs/*.log; do
        if [ -f "$log_file" ]; then
            local size=$(du -h "$log_file" | cut -f1)
            local lines=$(wc -l < "$log_file")
            echo "   üìÑ $(basename "$log_file"): $size, $lines —Å—Ç—Ä–æ–∫"
        fi
    done
else
    echo "   üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo ""
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
if [ -d "data" ]; then
    local data_size=$(du -sh data 2>/dev/null | cut -f1)
    echo "   üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $data_size"
fi

if [ -d "uploads" ]; then
    local uploads_size=$(du -sh uploads 2>/dev/null | cut -f1)
    echo "   üìÅ –ó–∞–≥—Ä—É–∑–∫–∏: $uploads_size"
fi

echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   üöÄ –ó–∞–ø—É—Å–∫: ./start.sh"
echo "   üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ./stop.sh"
echo "   üìã –°—Ç–∞—Ç—É—Å: ./status.sh"
