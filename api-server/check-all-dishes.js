const fs = require('fs');
const path = require('path');

console.log('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ë–õ–Æ–î...\n');

// –ß–∏—Ç–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const categoriesPath = path.join(__dirname, 'categories_current.json');
const categories = JSON.parse(fs.readFileSync(categoriesPath, 'utf8'));

// –ß–∏—Ç–∞–µ–º –±–ª—é–¥–∞
const dishesPath = path.join(__dirname, 'dishes_current.json');
const dishes = JSON.parse(fs.readFileSync(dishesPath, 'utf8'));

console.log(`üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
console.log(`üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);
console.log(`üçΩÔ∏è –ë–ª—é–¥: ${dishes.length}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–ª—é–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
console.log('\nüìã –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ë–õ–Æ–î –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:');
categories.forEach(cat => {
  const categoryDishes = dishes.filter(dish => dish.category_id === cat.id);
  const name = typeof cat.name === 'string' ? JSON.parse(cat.name) : cat.name;
  console.log(`\nüè∑Ô∏è ${name.ru} (${name.zh}): ${categoryDishes.length} –±–ª—é–¥`);
  
  if (categoryDishes.length > 0) {
    categoryDishes.forEach(dish => {
      const dishName = typeof dish.name === 'string' ? JSON.parse(dish.name) : dish.name;
      console.log(`  ‚Ä¢ ${dishName.ru} (${dishName.zh}) - ${dish.price} TJS`);
    });
  } else {
    console.log(`  ‚ùå –ù–µ—Ç –±–ª—é–¥ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª—é–¥–∞ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const uncategorizedDishes = dishes.filter(dish => {
  const category = categories.find(cat => cat.id === dish.category_id);
  return !category;
});

if (uncategorizedDishes.length > 0) {
  console.log('\n‚ùå –ë–õ–Æ–î–ê –ë–ï–ó –ö–ê–¢–ï–ì–û–†–ò–ò:');
  uncategorizedDishes.forEach(dish => {
    const dishName = typeof dish.name === 'string' ? JSON.parse(dish.name) : dish.name;
    console.log(`‚Ä¢ ${dishName.ru} (category_id: ${dish.category_id})`);
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
const dishNames = dishes.map(dish => {
  const dishName = typeof dish.name === 'string' ? JSON.parse(dish.name) : dish.name;
  return dishName.ru;
});

const duplicates = dishNames.filter((name, index) => dishNames.indexOf(name) !== index);
if (duplicates.length > 0) {
  console.log('\n‚ö†Ô∏è –î–£–ë–õ–ò–ö–ê–¢–´ –ë–õ–Æ–î:');
  [...new Set(duplicates)].forEach(name => {
    console.log(`‚Ä¢ ${name}`);
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª—é–¥–∞ –±–µ–∑ –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const dishesWithoutChinese = dishes.filter(dish => {
  const dishName = typeof dish.name === 'string' ? JSON.parse(dish.name) : dish.name;
  return !dishName.zh || dishName.zh === 'undefined' || dishName.zh === '';
});

if (dishesWithoutChinese.length > 0) {
  console.log('\n‚ùå –ë–õ–Æ–î–ê –ë–ï–ó –ö–ò–¢–ê–ô–°–ö–ò–• –ü–ï–†–ï–í–û–î–û–í:');
  dishesWithoutChinese.forEach(dish => {
    const dishName = typeof dish.name === 'string' ? JSON.parse(dish.name) : dish.name;
    console.log(`‚Ä¢ ${dishName.ru}`);
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª—é–¥–∞ —Å –Ω—É–ª–µ–≤—ã–º–∏ —Ü–µ–Ω–∞–º–∏
const dishesWithZeroPrice = dishes.filter(dish => !dish.price || dish.price === '0' || dish.price === 0);
if (dishesWithZeroPrice.length > 0) {
  console.log('\n‚ö†Ô∏è –ë–õ–Æ–î–ê –° –ù–£–õ–ï–í–´–ú–ò –¶–ï–ù–ê–ú–ò:');
  dishesWithZeroPrice.forEach(dish => {
    const dishName = typeof dish.name === 'string' ? JSON.parse(dish.name) : dish.name;
    console.log(`‚Ä¢ ${dishName.ru} - ${dish.price} TJS`);
  });
}

console.log('\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
